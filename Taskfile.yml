version: '3'

tasks:
  default:
    cmds:
      - task: run

  setup:
    desc: "初回セットアップ: 必要な依存関係をインストールし、環境を整備します"
    cmds:
      - task: create_env_file
      - task: install_dependencies
      - task: create_virtualenv
      - task: activate_virtualenv
      - task: install_python_dependencies

  create_env_file:
    desc: ".envファイルを作成します"
    cmds:
      - if [ ! -f .env ]; then cp .env.example .env; fi

  install_dependencies:
    desc: "FFmpegとOpen JTalkをインストールします"
    cmds:
      - if [[ "$OSTYPE" == "darwin"* ]]; then brew install ffmpeg open-jtalk; fi
      - if [[ "$OSTYPE" == "linux-gnu"* ]]; then sudo apt-get update && sudo apt-get install -y ffmpeg open-jtalk open-jtalk-mecab-naist-jdic; fi

  create_virtualenv:
    desc: "Pythonの仮想環境を作成します"
    cmds:
      - if [ ! -d "venv" ]; then python3.11 -m venv venv; fi

  activate_virtualenv:
    desc: "Python仮想環境を有効化します"
    cmds:
      - source venv/bin/activate  # Windowsでは venv\\Scripts\\activate を使用

  install_python_dependencies:
    desc: "Python依存パッケージをインストールします"
    cmds:
      - pip install -r requirements.txt

  run:
    desc: "ボットを実行します"
    cmds:
      - task: activate_virtualenv
      - python3.11 main.py

  clean:
    desc: "クリーンアップ: 一時ファイルと.envを削除します"
    cmds:
      - rm -f .env
      - find . -name '__pycache__' -exec rm -rf {} +
      - rm -rf venv

  build:
    desc: "docker buildの実行"
    cmds:
      - docker build --no-cache -t notpop/flex-talk-mei .

  multi-build:
    desc: "docker build and push for multi arch."
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64 -t notpop/flex-talk-mei-multi-arch --push .
